{"ast":null,"code":"var _jsxFileName = \"/Users/mcit/works/react/routing-practice/src/components/quotes/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../ui/Card';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isEntered,\n      message: location => 'Are you sure you want to leave? All your dta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: formFocusHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"iW++gmQ1zYp82ZxDhijA2Nrq8YA=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useRef","useState","Fragment","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isEntered","setIsEntered","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocusHandler","location","form","isLoading","loading","control","actions"],"sources":["/Users/mcit/works/react/routing-practice/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../ui/Card';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  }\n\n  return (\n    <Fragment>\n      <Prompt \n      when={isEntered}\n      message={(location) => 'Are you sure you want to leave? All your dta'}\n       />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAMU,cAAc,GAAGX,MAAM,EAA7B;EACA,MAAMY,YAAY,GAAGZ,MAAM,EAA3B;;EAEA,SAASa,iBAAT,CAA2BC,KAA3B,EAAkC;IAChCA,KAAK,CAACC,cAAN;IAEA,MAAMC,aAAa,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA7C;IACA,MAAMC,WAAW,GAAGP,YAAY,CAACK,OAAb,CAAqBC,KAAzC,CAJgC,CAMhC;;IAEAV,KAAK,CAACY,UAAN,CAAiB;MAAEC,MAAM,EAAEL,aAAV;MAAyBM,IAAI,EAAEH;IAA/B,CAAjB;EACD;;EAED,MAAMI,gBAAgB,GAAG,MAAM;IAC7Bb,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD;;EAIA,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,MAAD;MACA,IAAI,EAAED,SADN;MAEA,OAAO,EAAGe,QAAD,IAAc;IAFvB;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,IAAD;MAAA,uBACE;QACE,OAAO,EAAED,gBADX;QAEE,SAAS,EAAEjB,OAAO,CAACmB,IAFrB;QAGE,QAAQ,EAAEZ,iBAHZ;QAAA,WAIGL,KAAK,CAACkB,SAAN,iBACC;UAAK,SAAS,EAAEpB,OAAO,CAACqB,OAAxB;UAAA,uBACE,QAAC,cAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QALJ,eAUE;UAAK,SAAS,EAAErB,OAAO,CAACsB,OAAxB;UAAA,wBACE;YAAO,OAAO,EAAC,QAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAO,IAAI,EAAC,MAAZ;YAAmB,EAAE,EAAC,QAAtB;YAA+B,GAAG,EAAEjB;UAApC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAcE;UAAK,SAAS,EAAEL,OAAO,CAACsB,OAAxB;UAAA,wBACE;YAAO,OAAO,EAAC,MAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAU,EAAE,EAAC,MAAb;YAAoB,IAAI,EAAC,GAAzB;YAA6B,GAAG,EAAEhB;UAAlC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAdF,eAkBE;UAAK,SAAS,EAAEN,OAAO,CAACuB,OAAxB;UAAA,uBACE;YAAQ,SAAS,EAAC,KAAlB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAlBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CApDD;;GAAMtB,S;;KAAAA,S;AAsDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}